name: Windows Cross-Compile Build

# Trigger on push or pull request to the main branch
on:
  push:
    branches:
      - feature/add-macos-support
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest  # GitHub-hosted Windows runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download ARM GCC 6.2-2016q4 ZIP toolchain (Win32)
      - name: Download ARM GCC 6.2-2016q4 Toolchain (Win32 ZIP)
        run: |
          # Download the ARM GCC toolchain (Win32 ZIP version)
          curl -L https://developer.arm.com/-/media/Files/downloads/gnu-rm/6-2016q4/gcc-arm-none-eabi-6_2-2016q4-20161216-win32-zip.zip -o $HOME/gcc-arm-none-eabi-6_2-2016q4-20161216-win32-zip.zip

      # Step 3: Extract ARM GCC toolchain (Win32) from ZIP
      - name: Extract ARM GCC Toolchain (Win32)
        run: |
          # Extract the downloaded ZIP file to the $HOME/arm-toolchain directory
          Expand-Archive -Path "$HOME/gcc-arm-none-eabi-6_2-2016q4-20161216-win32-zip.zip" -DestinationPath "$HOME/arm-toolchain" -Force

      # Step 4: Set up the environment for cross-compilation
      - name: Set up environment for cross-compilation
        run: |
          # Add ARM GCC to the PATH
          echo "PATH=$HOME/arm-toolchain/bin:$PATH" >> $GITHUB_ENV
          echo "ARM_PATH=$HOME/arm-toolchain/bin" >> $
      
      # - name: Download and Install GNU Make (Native for Windows)
      #   run: |
      #     # Download GNU Make for Windows (from GnuWin32)
      #     curl -L https://downloads.sourceforge.net/gnuwin32/make-3.81.exe -o $HOME/make.exe
      #     # Create a directory for make and move it there
      #     mkdir $HOME/make
      #     move $HOME/make.exe $HOME/make/make.exe
      #     # Add the directory with make.exe to the PATH
      #     echo "$HOME/make" >> $GITHUB_ENV
      - name: Set up winget
        run: |
          # Ensure winget is available (it should be pre-installed on Windows runners)
          winget --version

      - name: Install Make using winget
        run: |
          winget install -e --id GnuWin32.Make

      - name: Verify Make installation
        run: |
          make --version

      # Step 6: Change to the firmware directory and run the build using Make
      - name: Run cross-compilation with Make in firmware directory
        run: |
          # Change to the firmware directory and run make
          cd firmware
          make

      - name: Archive files
        run: Compress-Archive -Path .\obj\* -DestinationPath firmware-artifact.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-artifact
          path: firmware-artifact.zip
          retention-days: 7


