name: Windows Cross-Compile Build

# Trigger on push or pull request to the main branch
on:
  push:
    branches:
      - feature/add-macos-support
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest  # GitHub-hosted Windows runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download ARM GCC 5.3-2016-q1 Installer
      - name: Download ARM GCC 5.3-2016-q1 Installer
        run: |
          curl -L https://developer.arm.com/-/media/Files/downloads/gnu-rm/5_3-20160330/gcc-arm-none-eabi-5_3-20160330-win32.exe -o $HOME/gcc-arm-none-eabi-5_3-20160330-win32.exe

      # Step 3: Install ARM GCC 5.3-2016-q1 Toolchain
      - name: Install ARM GCC 5.3-2016-q1
        run: |
          # Run the installer with silent installation
          $HOME/gcc-arm-none-eabi-5_3-20160330-win32.exe /S /D=$HOME/arm-toolchain

      # Step 4: Set up the environment for cross-compilation
      - name: Set up environment for cross-compilation
        run: |
          # Add ARM GCC to the PATH
          echo "PATH=$HOME/arm-toolchain/bin:$PATH" >> $GITHUB_ENV
          echo "ARM_PATH=$HOME/arm-toolchain/bin" >> $GITHUB_ENV

      # Step 5: Install Make via Chocolatey
      - name: Install Make (via Chocolatey)
        run: |
          # Install Make using Chocolatey (Windows package manager)
          choco install make -y

      # Step 6: Change to the firmware directory and run the build using Make
      - name: Run cross-compilation with Make in firmware directory
        run: |
          # Change to the firmware directory and run make
          cd firmware
          make CC=$ARM_PATH/arm-none-eabi-gcc
